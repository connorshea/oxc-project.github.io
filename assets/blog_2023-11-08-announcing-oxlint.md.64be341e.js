import{_ as s,C as a,o,c as n,H as t,Q as l}from"./chunks/framework.725e5b03.js";const b=JSON.parse('{"title":"Oxlint General Availability","description":"","frontmatter":{"title":"Oxlint General Availability","outline":"deep","authors":["boshen"]},"headers":[],"relativePath":"blog/2023-11-08-announcing-oxlint.md","filePath":"blog/2023-11-08-announcing-oxlint.md"}'),i={name:"blog/2023-11-08-announcing-oxlint.md"},p=l('<p>We&#39;re thrilled to announce that oxlint is now generally available! This milestone signifies our team&#39;s ability to promptly address and triage issues.</p><p>Oxlint is a JavaScript linter designed to catch erroneous or useless code without requiring any configurations by default.</p><h2 id="recommended-usage" tabindex="-1">Recommended Usage <a class="header-anchor" href="#recommended-usage" aria-label="Permalink to &quot;Recommended Usage&quot;">​</a></h2><p>At the current stage, oxlint is <strong>not intended to fully replace ESLint</strong>; it serves as an enhancement when ESLint&#39;s slowness becomes a bottleneck in your workflow.</p><p>We recommend running oxlint before ESLint in your lint-staged or CI setup for a quicker feedback loop, considering it only takes a few seconds to run on large codebases.</p><p>To test oxlint in your JavaScript/TypeScript codebase, simply execute the following command in the root directory of your repository:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-ZojUi" id="tab-VfXQOEq" checked="checked"><label for="tab-VfXQOEq">npm</label><input type="radio" name="group-ZojUi" id="tab-ipUsgV3"><label for="tab-ipUsgV3">pnpm</label><input type="radio" name="group-ZojUi" id="tab-pYaw5nV"><label for="tab-pYaw5nV">yarn</label><input type="radio" name="group-ZojUi" id="tab-cH9xPK_"><label for="tab-cH9xPK_">bun</label><input type="radio" name="group-ZojUi" id="tab-O8_7r4t"><label for="tab-O8_7r4t">deno</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">oxlint@latest</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">oxlint@latest</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pnpm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dlx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">oxlint@latest</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pnpm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dlx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">oxlint@latest</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">yarn</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dlx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">oxlint@latest</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">yarn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dlx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">oxlint@latest</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bunx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">oxlint@latest</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bunx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">oxlint@latest</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deno</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">oxlint@latest</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deno</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">oxlint@latest</span></span></code></pre></div></div></div><p>Or follow the <a href="/docs/guide/usage/linter.html">installation guide</a>.</p><h2 id="design" tabindex="-1">Design <a class="header-anchor" href="#design" aria-label="Permalink to &quot;Design&quot;">​</a></h2><h3 id="_50-100-times-faster-than-eslint" tabindex="-1">50 - 100 times faster than ESLint <a class="header-anchor" href="#_50-100-times-faster-than-eslint" aria-label="Permalink to &quot;50 - 100 times faster than ESLint&quot;">​</a></h3><p>To put this into perspective, Shopify has reported that their 75-minutes ESLint run is now only 10 seconds.</p><p>From Jason Miller, Shopify DX and creator of Preact:</p><blockquote><p>oxlint has been a massive win for us at Shopify. Our previous linting setup took 75 minutes to run, so we were fanning it out across 40+ workers in CI.</p><p>By comparison, oxlint takes around 10 seconds to lint the same codebase on a single worker, and the output is easier to interpret.</p><p>We even caught a few bugs that were hidden or skipped by our old setup when we migrated!</p></blockquote><p>The majority of the performance gains stem from Oxlint being purposefully designed for performance, utilizing Rust and parallel processing as key factors.</p><h3 id="lint-for-correctness" tabindex="-1">Lint for correctness <a class="header-anchor" href="#lint-for-correctness" aria-label="Permalink to &quot;Lint for correctness&quot;">​</a></h3><p>Oxlint defaults to linting for correctness. &quot;Correctness&quot; refers to code that&#39;s erroneous, useless, mistaken, or introduces confusion to the codebase.</p><p>Other nitpicking rules, categorized as <code>perf</code>, <code>suspicious</code>, <code>pedantic</code>, or <code>style</code>, don&#39;t facilitate maintaining work-flow; hence, they are turned off by default.</p><h3 id="convention-over-configuration" tabindex="-1">Convention over configuration <a class="header-anchor" href="#convention-over-configuration" aria-label="Permalink to &quot;Convention over configuration&quot;">​</a></h3><p>Setting up new JavaScript / TypeScript codebases is becoming increasingly complex. There&#39;s a high likelihood of encountering compatibility issues among your tools, potentially resulting in hours of wasted time.</p><p>That&#39;s why we designed oxlint to be zero-config out of the box; even Node.js is not a requirement. Most adjustments can be made through the command-line, and for complex rule changes, a configuration file is available.</p><h3 id="plugins" tabindex="-1">Plugins <a class="header-anchor" href="#plugins" aria-label="Permalink to &quot;Plugins&quot;">​</a></h3><p>Oxlint has consolidated rules from popular plugins like TypeScript, React, Jest, Unicorn, and JSX-a11y but doesn&#39;t provide a plugin system yet.</p><p>We recognize the importance of plugins in the JavaScript ecosystem and are actively investigating a DSL-based plugin system.</p><p>However, you might appreciate a standalone linter — no need to manage a list of plugin dependencies, navigate through <a href="https://stackoverflow.com/questions/tagged/eslint" target="_blank" rel="noreferrer">compatibility issues</a>, or <a href="https://github.com/import-js/eslint-plugin-import/pull/2504#issuecomment-1191057877" target="_blank" rel="noreferrer">resort to forked plugins due to version constraints</a>.</p><h3 id="diagnostics" tabindex="-1">Diagnostics <a class="header-anchor" href="#diagnostics" aria-label="Permalink to &quot;Diagnostics&quot;">​</a></h3><p>Deciphering linter messages can be challenging. Oxlint will strive to pinpoint the root cause and provide helpful messages, aiming to eliminate the need for reading lengthy rule documentation, which can be time-consuming.</p><img width="100%" src="https://github.com/oxc-project/oxc/assets/1430279/094a3b24-0433-42ae-aad2-48a7dec2b985"><hr><p>To get started, follow the <a href="/docs/guide/usage/linter.html">installation guide</a>.</p>',29);function r(c,d,u,h,g,y){const e=a("AppBlogPostHeader");return o(),n("div",null,[t(e),p])}const f=s(i,[["render",r]]);export{b as __pageData,f as default};

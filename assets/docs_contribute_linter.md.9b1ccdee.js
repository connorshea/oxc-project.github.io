import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.725e5b03.js";const h=JSON.parse('{"title":"Linter","description":"","frontmatter":{"title":"Linter","outline":"deep"},"headers":[],"relativePath":"docs/contribute/linter.md","filePath":"docs/contribute/linter.md","lastUpdated":1701523047000}'),l={name:"docs/contribute/linter.md"},o=e(`<h1 id="linter" tabindex="-1">Linter <a class="header-anchor" href="#linter" aria-label="Permalink to &quot;Linter&quot;">​</a></h1><h2 id="development" tabindex="-1">Development <a class="header-anchor" href="#development" aria-label="Permalink to &quot;Development&quot;">​</a></h2><p>Create a <code>./test.ts</code> and then</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">just</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">watch</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;run -p oxc_cli --bin oxlint -- test.ts&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">just</span><span style="color:#24292E;"> </span><span style="color:#032F62;">watch</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;run -p oxc_cli --bin oxlint -- test.ts&quot;</span></span></code></pre></div><h2 id="rule-generation" tabindex="-1">Rule generation <a class="header-anchor" href="#rule-generation" aria-label="Permalink to &quot;Rule generation&quot;">​</a></h2><p>Create a new lint rule by providing the ESLint name</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">just</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">new-rule</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">name</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">just</span><span style="color:#24292E;"> </span><span style="color:#032F62;">new-rule</span><span style="color:#24292E;"> </span><span style="color:#032F62;">name</span></span></code></pre></div><p>Then add the rule to <code>crates/oxc_linter/src/rules.rs</code>:</p><ol><li>Add to <code>mod</code></li><li>Add to <code>oxc_macros::declare_all_lint_rules</code> at the bottom of the file</li></ol><p>For other plugins, there are also:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">just</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">new-jest-rule</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">name</span></span>
<span class="line"><span style="color:#B392F0;">just</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">new-ts-rule</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">name</span></span>
<span class="line"><span style="color:#B392F0;">just</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">new-unicorn-rule</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">name</span></span>
<span class="line"><span style="color:#B392F0;">just</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">new-react-rule</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">name</span></span>
<span class="line"><span style="color:#B392F0;">just</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">new-jsx-a11y-rule</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">name</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">just</span><span style="color:#24292E;"> </span><span style="color:#032F62;">new-jest-rule</span><span style="color:#24292E;"> </span><span style="color:#032F62;">name</span></span>
<span class="line"><span style="color:#6F42C1;">just</span><span style="color:#24292E;"> </span><span style="color:#032F62;">new-ts-rule</span><span style="color:#24292E;"> </span><span style="color:#032F62;">name</span></span>
<span class="line"><span style="color:#6F42C1;">just</span><span style="color:#24292E;"> </span><span style="color:#032F62;">new-unicorn-rule</span><span style="color:#24292E;"> </span><span style="color:#032F62;">name</span></span>
<span class="line"><span style="color:#6F42C1;">just</span><span style="color:#24292E;"> </span><span style="color:#032F62;">new-react-rule</span><span style="color:#24292E;"> </span><span style="color:#032F62;">name</span></span>
<span class="line"><span style="color:#6F42C1;">just</span><span style="color:#24292E;"> </span><span style="color:#032F62;">new-jsx-a11y-rule</span><span style="color:#24292E;"> </span><span style="color:#032F62;">name</span></span></code></pre></div>`,11),t=[o];function p(r,c,i,d,y,u){return a(),n("div",null,t)}const F=s(l,[["render",p]]);export{h as __pageData,F as default};

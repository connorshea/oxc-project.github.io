import{_ as e,o as t,c as r,Q as i}from"./chunks/framework.36bc40e2.js";const h=JSON.parse('{"title":"Rules","description":"","frontmatter":{"title":"Rules","outline":"deep"},"headers":[],"relativePath":"docs/contribute/rules.md","filePath":"docs/contribute/rules.md","lastUpdated":1700017501000}'),o={name:"docs/contribute/rules.md"},s=i('<ul><li>Check out some of the <a href="https://github.com/oxc-project/oxc/contribute" target="_blank" rel="noreferrer">good first issues</a> or ask us on [Discord][discord-url].</li><li>We welcome any form of contributions</li><li>We prefer smaller PRs to get things merged quickly</li><li>We recommend submitting stacked PRs via <a href="https://graphite.dev" target="_blank" rel="noreferrer">https://graphite.dev</a></li><li>APIs should be simple and well-documented.</li><li>All performance issues (runtime and compilation speed) are considered as bugs in this project.</li><li>Third-party dependencies should be minimal.</li><li>Monitor code coverage for unused code. Aim for 99% code coverage.</li><li>Embrace data-oriented design.</li><li>Prefer smaller PRs. Try <a href="https://graphite.dev" target="_blank" rel="noreferrer">graphite.dev</a>.</li></ul>',1),l=[s];function a(n,c,d,u,p,_){return t(),r("div",null,l)}const f=e(o,[["render",a]]);export{h as __pageData,f as default};

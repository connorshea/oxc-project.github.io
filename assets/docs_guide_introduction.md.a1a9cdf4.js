import{_ as e,o as a,c as t,Q as r}from"./chunks/framework.725e5b03.js";const f=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{"title":"Getting Started","outline":"deep"},"headers":[],"relativePath":"docs/guide/introduction.md","filePath":"docs/guide/introduction.md"}'),o={name:"docs/guide/introduction.md"},i=r('<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>The JavaScript Oxidation Compiler (Oxc) is a collection of high-performance tools for the JavaScript language written in Rust.</p><p>Our focus lies in constructing essential compiler tools for JavaScript: parser, linter, formatter, transpiler, minifier and resolver.</p><p>Additionally, we provide support for emerging JavaScript tools like Rspack, Rolldown, and Ezno.</p><p>Our goal is to create and empower tooling for <a href="https://www.swyx.io/js-third-age" target="_blank" rel="noreferrer">The Third Age of JavaScript</a>.</p><h2 id="philosophy" tabindex="-1">Philosophy <a class="header-anchor" href="#philosophy" aria-label="Permalink to &quot;Philosophy&quot;">​</a></h2><p>This project shares the same philosophies as <a href="https://biomejs.dev" target="_blank" rel="noreferrer">Biome</a> and <a href="https://beta.ruff.rs" target="_blank" rel="noreferrer">Ruff</a>.</p><ol><li>JavaScript tooling could be rewritten in a more performant language.</li><li>An integrated toolchain can tap into efficiencies that are not available to a disparate set of tools.</li></ol><h2 id="adoptions" tabindex="-1">Adoptions <a class="header-anchor" href="#adoptions" aria-label="Permalink to &quot;Adoptions&quot;">​</a></h2><ul><li>A 5M LOC TypeScript codebase previously running ESLint parallelized across 48 workers in CI taking 75 mins (12m wall time), it is now 8 seconds on a single worker. (<a href="https://twitter.com/boshen_c/status/1714827365136929029" target="_blank" rel="noreferrer">Source</a>)</li></ul><h2 id="endorsements" tabindex="-1">Endorsements <a class="header-anchor" href="#endorsements" aria-label="Permalink to &quot;Endorsements&quot;">​</a></h2><h4 id="joe-savona-react-team-member" tabindex="-1"><a href="https://x.com/en_JS/status/1676467920334094336" target="_blank" rel="noreferrer">Joe Savona</a>, React team member: <a class="header-anchor" href="#joe-savona-react-team-member" aria-label="Permalink to &quot;[Joe Savona](https://x.com/en_JS/status/1676467920334094336), React team member:&quot;">​</a></h4><blockquote><p>For…reasons I am experimenting w various Rust-based JS compilers. I don’t agree w every design decision but overall oxc is really well done.</p></blockquote><h4 id="sathya-gunasekaran-react-team-member" tabindex="-1"><a href="https://x.com/_gsathya/status/1676453430263701506" target="_blank" rel="noreferrer">Sathya Gunasekaran</a>, React team member: <a class="header-anchor" href="#sathya-gunasekaran-react-team-member" aria-label="Permalink to &quot;[Sathya Gunasekaran](https://x.com/_gsathya/status/1676453430263701506), React team member:&quot;">​</a></h4><blockquote><p>oxc is kinda neat</p></blockquote>',16),n=[i];function s(l,c,h,d,p,m){return a(),t("div",null,n)}const g=e(o,[["render",s]]);export{f as __pageData,g as default};

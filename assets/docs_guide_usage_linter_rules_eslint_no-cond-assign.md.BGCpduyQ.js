import{_ as o,c as r,j as e,a as s,I as a,w as l,a4 as c,E as t,o as d}from"./chunks/framework.Qpa4gud8.js";const w=JSON.parse('{"title":"eslint/no-cond-assign","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/eslint/no-cond-assign.md","filePath":"docs/guide/usage/linter/rules/eslint/no-cond-assign.md"}'),h={name:"docs/guide/usage/linter/rules/eslint/no-cond-assign.md"},p={id:"eslint-no-cond-assign",tabindex:"-1"},u=e("a",{class:"header-anchor",href:"#eslint-no-cond-assign","aria-label":'Permalink to "eslint/no-cond-assign <Badge type="info" text="Correctness" />"'},"​",-1),_={class:"rule-meta"},g=e("span",{class:"emoji"},"✅",-1),k=c(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">​</a></h3><p>Disallow assignment operators in conditional expressions</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">​</a></h3><p>In conditional statements, it is very easy to mistype a comparison operator (such as <code>==</code>) as an assignment operator (such as <code>=</code>).</p><p>There are valid reasons to use assignment operators in conditional statements. However, it can be difficult to tell whether a specific assignment was intentional.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Check the user&#39;s job title</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ((user.jobTitle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;manager&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // user.jobTitle is now incorrect</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_linter/src/rules/eslint/no_cond_assign.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>`,9);function m(b,f,x,y,E,v){const i=t("Badge"),n=t("Alert");return d(),r("div",null,[e("h1",p,[s("eslint/no-cond-assign "),a(i,{type:"info",text:"Correctness"}),s(),u]),e("div",_,[a(n,{class:"default-on",type:"success"},{default:l(()=>[g,s(" This rule is turned on by default. ")]),_:1})]),k])}const C=o(h,[["render",m]]);export{w as __pageData,C as default};

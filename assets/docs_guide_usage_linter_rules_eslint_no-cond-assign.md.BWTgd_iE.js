import{_ as r,C as t,c as l,o as d,j as e,ag as c,a,G as i,w as h}from"./chunks/framework.K3-BBDXc.js";const E=JSON.parse('{"title":"eslint/no-cond-assign","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/eslint/no-cond-assign.md","filePath":"docs/guide/usage/linter/rules/eslint/no-cond-assign.md"}'),p={name:"docs/guide/usage/linter/rules/eslint/no-cond-assign.md"},u={id:"eslint-no-cond-assign",tabindex:"-1"},g={class:"rule-meta"};function k(m,s,b,f,_,x){const n=t("Badge"),o=t("Alert");return d(),l("div",null,[e("h1",u,[s[0]||(s[0]=a("eslint/no-cond-assign ")),i(n,{type:"info",text:"Correctness"}),s[1]||(s[1]=a()),s[2]||(s[2]=e("a",{class:"header-anchor",href:"#eslint-no-cond-assign","aria-label":'Permalink to "eslint/no-cond-assign <Badge type="info" text="Correctness" />"'},"​",-1))]),e("div",g,[i(o,{class:"default-on",type:"success"},{default:h(()=>s[3]||(s[3]=[e("span",{class:"emoji"},"✅",-1),a(" This rule is turned on by default. ")])),_:1})]),s[4]||(s[4]=c(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">​</a></h3><p>Disallow assignment operators in conditional expressions</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">​</a></h3><p>In conditional statements, it is very easy to mistype a comparison operator (such as <code>==</code>) as an assignment operator (such as <code>=</code>).</p><p>There are valid reasons to use assignment operators in conditional statements. However, it can be difficult to tell whether a specific assignment was intentional.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Check the user&#39;s job title</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ((user.jobTitle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;manager&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // user.jobTitle is now incorrect</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/e453be4bf22d285a34825652a7a1d20b3fdf7121/crates/oxc_linter/src/rules/eslint/no_cond_assign.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>`,9))])}const v=r(p,[["render",k]]);export{E as __pageData,v as default};

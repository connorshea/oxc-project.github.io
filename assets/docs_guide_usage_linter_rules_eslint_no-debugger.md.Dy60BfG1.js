import{_ as r,c as o,j as e,a as s,I as a,w as t,a4 as h,E as n,o as d}from"./chunks/framework.D6UG3LSr.js";const v=JSON.parse('{"title":"eslint/no-debugger","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/eslint/no-debugger.md","filePath":"docs/guide/usage/linter/rules/eslint/no-debugger.md"}'),c={name:"docs/guide/usage/linter/rules/eslint/no-debugger.md"},p={id:"eslint-no-debugger",tabindex:"-1"},g=e("a",{class:"header-anchor",href:"#eslint-no-debugger","aria-label":'Permalink to "eslint/no-debugger <Badge type="info" text="Correctness" />"'},"​",-1),k={class:"rule-meta"},u=e("span",{class:"emoji"},"✅",-1),_=e("span",{class:"emoji"},"🛠️",-1),b=h(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">​</a></h3><p>Checks for usage of the <code>debugger</code> statement</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">​</a></h3><p><code>debugger</code> statements do not affect functionality when a debugger isn&#39;t attached. They&#39;re most commonly an accidental debugging leftover.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> complexCalculation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  debugger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_linter/src/rules/eslint/no_debugger.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>`,8);function f(m,y,E,x,F,C){const l=n("Badge"),i=n("Alert");return d(),o("div",null,[e("h1",p,[s("eslint/no-debugger "),a(l,{type:"info",text:"Correctness"}),s(),g]),e("div",k,[a(i,{class:"default-on",type:"success"},{default:t(()=>[u,s(" This rule is turned on by default. ")]),_:1}),a(i,{class:"fix",type:"info"},{default:t(()=>[_,s(" An auto-fix is available for this rule. ")]),_:1})]),b])}const D=r(c,[["render",f]]);export{v as __pageData,D as default};

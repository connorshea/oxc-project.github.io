import{_ as r,C as e,c as o,o as p,j as i,ag as h,a,G as t,w as d}from"./chunks/framework.Az7Yw7dm.js";const v=JSON.parse('{"title":"eslint/no-template-curly-in-string","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/eslint/no-template-curly-in-string.md","filePath":"docs/guide/usage/linter/rules/eslint/no-template-curly-in-string.md"}'),c={name:"docs/guide/usage/linter/rules/eslint/no-template-curly-in-string.md"},k={id:"eslint-no-template-curly-in-string",tabindex:"-1"},g={class:"rule-meta"};function u(y,s,E,m,b,F){const n=e("Badge"),l=e("Alert");return p(),o("div",null,[i("h1",k,[s[0]||(s[0]=a("eslint/no-template-curly-in-string ")),t(n,{type:"info",text:"Style"}),s[1]||(s[1]=a()),s[2]||(s[2]=i("a",{class:"header-anchor",href:"#eslint-no-template-curly-in-string","aria-label":'Permalink to "eslint/no-template-curly-in-string <Badge type="info" text="Style" />"'},"​",-1))]),i("div",g,[t(l,{class:"fix",type:"info"},{default:d(()=>s[3]||(s[3]=[i("span",{class:"emoji"},"⚠️🛠️️",-1),a(" A dangerous auto-fix is available for this rule. ")])),_:1})]),s[4]||(s[4]=h("",14))])}const f=r(c,[["render",u]]);export{v as __pageData,f as default};

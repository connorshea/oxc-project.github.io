import{_ as l,c as h,j as s,a as i,I as a,w as p,a4 as k,E as e,o as r}from"./chunks/framework.Qpa4gud8.js";const D=JSON.parse('{"title":"eslint/no-unexpected-multiline","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/eslint/no-unexpected-multiline.md","filePath":"docs/guide/usage/linter/rules/eslint/no-unexpected-multiline.md"}'),d={name:"docs/guide/usage/linter/rules/eslint/no-unexpected-multiline.md"},o={id:"eslint-no-unexpected-multiline",tabindex:"-1"},c=s("a",{class:"header-anchor",href:"#eslint-no-unexpected-multiline","aria-label":'Permalink to "eslint/no-unexpected-multiline <Badge type="info" text="Suspicious" />"'},"​",-1),E={class:"rule-meta"},g=s("span",{class:"emoji"},"⚠️🛠️️",-1),u=k("",11);function y(m,F,x,b,f,_){const n=e("Badge"),t=e("Alert");return r(),h("div",null,[s("h1",o,[i("eslint/no-unexpected-multiline "),a(n,{type:"info",text:"Suspicious"}),i(),c]),s("div",E,[a(t,{class:"fix",type:"info"},{default:p(()=>[g,i(" A dangerous auto-fix is available for this rule. ")]),_:1})]),u])}const v=l(d,[["render",y]]);export{D as __pageData,v as default};

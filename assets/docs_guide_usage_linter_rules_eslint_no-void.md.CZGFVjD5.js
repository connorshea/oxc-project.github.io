import{_ as l,C as a,c as r,o as d,j as e,ag as p,a as i,G as t,w as h}from"./chunks/framework.K3-BBDXc.js";const _=JSON.parse('{"title":"eslint/no-void","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/eslint/no-void.md","filePath":"docs/guide/usage/linter/rules/eslint/no-void.md"}'),c={name:"docs/guide/usage/linter/rules/eslint/no-void.md"},k={id:"eslint-no-void",tabindex:"-1"},u={class:"rule-meta"};function g(f,s,v,E,m,b){const o=a("Badge"),n=a("Alert");return d(),r("div",null,[e("h1",k,[s[0]||(s[0]=i("eslint/no-void ")),t(o,{type:"info",text:"Restriction"}),s[1]||(s[1]=i()),s[2]||(s[2]=e("a",{class:"header-anchor",href:"#eslint-no-void","aria-label":'Permalink to "eslint/no-void <Badge type="info" text="Restriction" />"'},"â€‹",-1))]),e("div",u,[t(n,{class:"fix",type:"info"},{default:h(()=>s[3]||(s[3]=[e("span",{class:"emoji"},"ðŸš§",-1),i(" An auto-fix is still under development. ")])),_:1})]),s[4]||(s[4]=p(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">â€‹</a></h3><p>Disallow <code>void</code> operators.</p><p>Why is this bad</p><p>The <code>void</code> operator is often used to obtain the <code>undefined</code> primitive value, but it is unnecessary. You can use <code>undefined</code> directly instead.</p><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">â€‹</a></h3><p>Examples of <strong>incorrect</strong> code for this rule:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> foo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Examples of <strong>correct</strong> code for this rule:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;var foo = bar()&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo.void()&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo.void = bar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">â€‹</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/e453be4bf22d285a34825652a7a1d20b3fdf7121/crates/oxc_linter/src/rules/eslint/no_void.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>`,11))])}const x=l(c,[["render",g]]);export{_ as __pageData,x as default};

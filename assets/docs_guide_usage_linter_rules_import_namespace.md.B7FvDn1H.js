import{_ as o,c as r,j as a,a as e,I as s,a4 as n,o as c,E as i}from"./chunks/framework.D6UG3LSr.js";const T=JSON.parse('{"title":"import/namespace","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/import/namespace.md","filePath":"docs/guide/usage/linter/rules/import/namespace.md"}'),d={name:"docs/guide/usage/linter/rules/import/namespace.md"},p={id:"import-namespace",tabindex:"-1"},l=a("a",{class:"header-anchor",href:"#import-namespace","aria-label":'Permalink to "import/namespace <Badge type="info" text="Correctness" />"'},"​",-1),m=n('<div class="rule-meta"></div><h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">​</a></h3><p>Enforces names exist at the time they are dereferenced, when imported as a full namespace (i.e. <code>import * as foo from &#39;./foo&#39;; foo.bar();</code> will report if bar is not exported by <code>./foo.</code>). Will report at the import declaration if there are no exported names found. Also, will report for computed references (i.e. <code>foo[&quot;bar&quot;]()</code>). Reports on assignment to a member of an imported namespace.</p><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_linter/src/rules/import/namespace.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>',5);function f(h,_,u,b,x,g){const t=i("Badge");return c(),r("div",null,[a("h1",p,[e("import/namespace "),s(t,{type:"info",text:"Correctness"}),e(),l]),m])}const k=o(d,[["render",f]]);export{T as __pageData,k as default};

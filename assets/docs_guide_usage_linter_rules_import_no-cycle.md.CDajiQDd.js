import{_ as i,c as t,j as s,a as e,I as n,a4 as o,o as l,E as r}from"./chunks/framework.Qpa4gud8.js";const E=JSON.parse('{"title":"import/no-cycle","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/import/no-cycle.md","filePath":"docs/guide/usage/linter/rules/import/no-cycle.md"}'),p={name:"docs/guide/usage/linter/rules/import/no-cycle.md"},c={id:"import-no-cycle",tabindex:"-1"},h=s("a",{class:"header-anchor",href:"#import-no-cycle","aria-label":'Permalink to "import/no-cycle <Badge type="info" text="Restriction" />"'},"​",-1),d=o(`<div class="rule-meta"></div><h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">​</a></h3><p>Ensures that there is no resolvable path back to this module via its dependencies.</p><p>This includes cycles of depth 1 (imported module imports me) to &quot;∞&quot; (or Infinity), if the maxDepth option is not set.</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">​</a></h3><p>Dependency cycles lead to confusing architectures where bugs become hard to find.</p><p>It is common to import an <code>undefined</code> value that is caused by a cyclic dependency.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// dep-b.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./dep-a.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* ... */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// dep-a.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { b } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./dep-b.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// reported: Dependency cycle detected.</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_linter/src/rules/import/no_cycle.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>`,12);function k(u,m,y,g,b,_){const a=r("Badge");return l(),t("div",null,[s("h1",c,[e("import/no-cycle "),n(a,{type:"info",text:"Restriction"}),e(),h]),d])}const v=i(p,[["render",k]]);export{E as __pageData,v as default};

import{_ as l,c as o,j as s,a as i,I as e,w as h,a4 as p,E as a,o as r}from"./chunks/framework.D6UG3LSr.js";const q=JSON.parse('{"title":"jest/no-test-prefixes","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/jest/no-test-prefixes.md","filePath":"docs/guide/usage/linter/rules/jest/no-test-prefixes.md"}'),d={name:"docs/guide/usage/linter/rules/jest/no-test-prefixes.md"},k={id:"jest-no-test-prefixes",tabindex:"-1"},c=s("a",{class:"header-anchor",href:"#jest-no-test-prefixes","aria-label":'Permalink to "jest/no-test-prefixes <Badge type="info" text="Style" />"'},"​",-1),u={class:"rule-meta"},E=s("span",{class:"emoji"},"🛠️",-1),g=p("",12);function f(y,x,_,b,m,F){const t=a("Badge"),n=a("Alert");return r(),o("div",null,[s("h1",k,[i("jest/no-test-prefixes "),e(t,{type:"info",text:"Style"}),i(),c]),s("div",u,[e(n,{class:"fix",type:"info"},{default:h(()=>[E,i(" An auto-fix is available for this rule. ")]),_:1})]),g])}const C=l(d,[["render",f]]);export{q as __pageData,C as default};

import{_ as n,c as k,j as s,a as i,I as a,w as l,a4 as p,E as e,o as r}from"./chunks/framework.D6UG3LSr.js";const b=JSON.parse('{"title":"jest/prefer-mock-promise-shorthand","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/jest/prefer-mock-promise-shorthand.md","filePath":"docs/guide/usage/linter/rules/jest/prefer-mock-promise-shorthand.md"}'),E={name:"docs/guide/usage/linter/rules/jest/prefer-mock-promise-shorthand.md"},o={id:"jest-prefer-mock-promise-shorthand",tabindex:"-1"},d=s("a",{class:"header-anchor",href:"#jest-prefer-mock-promise-shorthand","aria-label":'Permalink to "jest/prefer-mock-promise-shorthand <Badge type="info" text="Style" />"'},"​",-1),g={class:"rule-meta"},c=s("span",{class:"emoji"},"🛠️",-1),y=p("",8);function F(m,u,C,B,f,_){const t=e("Badge"),h=e("Alert");return r(),k("div",null,[s("h1",o,[i("jest/prefer-mock-promise-shorthand "),a(t,{type:"info",text:"Style"}),i(),d]),s("div",g,[a(h,{class:"fix",type:"info"},{default:l(()=>[c,i(" An auto-fix is available for this rule for some violations. ")]),_:1})]),y])}const j=n(E,[["render",F]]);export{b as __pageData,j as default};

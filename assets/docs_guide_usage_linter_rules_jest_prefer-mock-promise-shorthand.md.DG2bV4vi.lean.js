import{d as k}from"./chunks/version.data.BJ0D6ZyH.js";import{C as t,c as p,o as r,j as i,ag as E,a,G as e,w as o}from"./chunks/framework.Az7Yw7dm.js";const d={id:"jest-prefer-mock-promise-shorthand",tabindex:"-1"},g={class:"rule-meta"},C=JSON.parse('{"title":"jest/prefer-mock-promise-shorthand","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/jest/prefer-mock-promise-shorthand.md","filePath":"docs/guide/usage/linter/rules/jest/prefer-mock-promise-shorthand.md"}'),c={name:"docs/guide/usage/linter/rules/jest/prefer-mock-promise-shorthand.md"},B=Object.assign(c,{setup(y){const n=`https://github.com/oxc-project/oxc/blob/${k}/crates/oxc_linter/src/rules/jest/prefer_mock_promise_shorthand.rs`;return(F,s)=>{const h=t("Badge"),l=t("Alert");return r(),p("div",null,[i("h1",d,[s[0]||(s[0]=a("jest/prefer-mock-promise-shorthand ")),e(h,{type:"info",text:"Style"}),s[1]||(s[1]=a()),s[2]||(s[2]=i("a",{class:"header-anchor",href:"#jest-prefer-mock-promise-shorthand","aria-label":'Permalink to "jest/prefer-mock-promise-shorthand <Badge type="info" text="Style" />"'},"‚Äã",-1))]),i("div",g,[e(l,{class:"fix",type:"info"},{default:o(()=>s[3]||(s[3]=[i("span",{class:"emoji"},"üõ†Ô∏è",-1),a(" An auto-fix is available for this rule for some violations. ")])),_:1})]),s[4]||(s[4]=E("",10)),i("ul",null,[i("li",null,[i("a",{href:n,target:"_blank",rel:"noreferrer"},"Rule Source")])])])}}});export{C as __pageData,B as default};

import{_ as k,C as e,c as l,o as p,j as i,ag as r,a,G as t,w as E}from"./chunks/framework.K3-BBDXc.js";const B=JSON.parse('{"title":"jest/prefer-mock-promise-shorthand","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/jest/prefer-mock-promise-shorthand.md","filePath":"docs/guide/usage/linter/rules/jest/prefer-mock-promise-shorthand.md"}'),o={name:"docs/guide/usage/linter/rules/jest/prefer-mock-promise-shorthand.md"},d={id:"jest-prefer-mock-promise-shorthand",tabindex:"-1"},g={class:"rule-meta"};function y(c,s,F,m,u,C){const h=e("Badge"),n=e("Alert");return p(),l("div",null,[i("h1",d,[s[0]||(s[0]=a("jest/prefer-mock-promise-shorthand ")),t(h,{type:"info",text:"Style"}),s[1]||(s[1]=a()),s[2]||(s[2]=i("a",{class:"header-anchor",href:"#jest-prefer-mock-promise-shorthand","aria-label":'Permalink to "jest/prefer-mock-promise-shorthand <Badge type="info" text="Style" />"'},"‚Äã",-1))]),i("div",g,[t(n,{class:"fix",type:"info"},{default:E(()=>s[3]||(s[3]=[i("span",{class:"emoji"},"üõ†Ô∏è",-1),a(" An auto-fix is available for this rule for some violations. ")])),_:1})]),s[4]||(s[4]=r("",8))])}const v=k(o,[["render",y]]);export{B as __pageData,v as default};

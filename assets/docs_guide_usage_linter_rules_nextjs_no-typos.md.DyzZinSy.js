import{_ as o,c as l,j as s,a as e,I as a,w as r,a4 as h,E as t,o as p}from"./chunks/framework.Qpa4gud8.js";const A=JSON.parse('{"title":"nextjs/no-typos","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/nextjs/no-typos.md","filePath":"docs/guide/usage/linter/rules/nextjs/no-typos.md"}'),d={name:"docs/guide/usage/linter/rules/nextjs/no-typos.md"},c={id:"nextjs-no-typos",tabindex:"-1"},k=s("a",{class:"header-anchor",href:"#nextjs-no-typos","aria-label":'Permalink to "nextjs/no-typos <Badge type="info" text="Correctness" />"'},"â€‹",-1),u={class:"rule-meta"},_=s("span",{class:"emoji"},"ðŸš§",-1),g=h(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">â€‹</a></h3><p>Prevent common typos in Next.js&#39;s data fetching functions</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">â€‹</a></h3><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">â€‹</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Page</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getServurSideProps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {}</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">â€‹</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_linter/src/rules/nextjs/no_typos.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>`,7);function y(x,E,f,m,b,v){const i=t("Badge"),n=t("Alert");return p(),l("div",null,[s("h1",c,[e("nextjs/no-typos "),a(i,{type:"info",text:"Correctness"}),e(),k]),s("div",u,[a(n,{class:"fix",type:"info"},{default:r(()=>[_,e(" An auto-fix is still under development. ")]),_:1})]),g])}const P=o(d,[["render",y]]);export{A as __pageData,P as default};

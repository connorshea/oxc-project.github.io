import{_ as l,C as n,c as p,o as k,j as i,ag as r,a,G as t,w as d}from"./chunks/framework.Az7Yw7dm.js";const v=JSON.parse('{"title":"promise/no-nesting","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/promise/no-nesting.md","filePath":"docs/guide/usage/linter/rules/promise/no-nesting.md"}'),E={name:"docs/guide/usage/linter/rules/promise/no-nesting.md"},o={id:"promise-no-nesting",tabindex:"-1"},g={class:"rule-meta"};function c(y,s,F,u,C,b){const e=n("Badge"),h=n("Alert");return k(),p("div",null,[i("h1",o,[s[0]||(s[0]=a("promise/no-nesting ")),t(e,{type:"info",text:"Style"}),s[1]||(s[1]=a()),s[2]||(s[2]=i("a",{class:"header-anchor",href:"#promise-no-nesting","aria-label":'Permalink to "promise/no-nesting <Badge type="info" text="Style" />"'},"â€‹",-1))]),i("div",g,[t(h,{class:"fix",type:"info"},{default:d(()=>s[3]||(s[3]=[i("span",{class:"emoji"},"ðŸš§",-1),a(" An auto-fix is still under development. ")])),_:1})]),s[4]||(s[4]=r("",17))])}const B=l(E,[["render",c]]);export{v as __pageData,B as default};

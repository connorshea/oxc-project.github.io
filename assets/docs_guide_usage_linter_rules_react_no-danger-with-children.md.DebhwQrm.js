import{_ as r,C as a,c as h,o as d,j as e,ag as o,a as i,G as t,w as p}from"./chunks/framework.K3-BBDXc.js";const x=JSON.parse('{"title":"react/no-danger-with-children","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/react/no-danger-with-children.md","filePath":"docs/guide/usage/linter/rules/react/no-danger-with-children.md"}'),k={name:"docs/guide/usage/linter/rules/react/no-danger-with-children.md"},c={id:"react-no-danger-with-children",tabindex:"-1"},g={class:"rule-meta"};function E(u,s,y,m,b,_){const n=a("Badge"),l=a("Alert");return d(),h("div",null,[e("h1",c,[s[0]||(s[0]=i("react/no-danger-with-children ")),t(n,{type:"info",text:"Correctness"}),s[1]||(s[1]=i()),s[2]||(s[2]=e("a",{class:"header-anchor",href:"#react-no-danger-with-children","aria-label":'Permalink to "react/no-danger-with-children <Badge type="info" text="Correctness" />"'},"​",-1))]),e("div",g,[t(l,{class:"default-on",type:"success"},{default:p(()=>s[3]||(s[3]=[e("span",{class:"emoji"},"✅",-1),i(" This rule is turned on by default. ")])),_:1})]),s[4]||(s[4]=o(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">​</a></h3><p>Disallows when a DOM element is using both <code>children</code> and <code>dangerouslySetInnerHTML</code> properties.</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">​</a></h3><p>React will throw a warning if this rule is ignored and both <code>children</code> and <code>dangerouslySetInnerHTML</code> are used.</p><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><p>Examples of <strong>incorrect</strong> code for this rule:</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dangerouslySetInnerHTML</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ __html: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;HTML&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }}&gt;Children&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">React.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;div&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { dangerouslySetInnerHTML: { __html: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;HTML&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } }, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Children&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Examples of <strong>correct</strong> code for this rule:</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Children&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dangerouslySetInnerHTML</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ __html: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;HTML&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }} /&gt;</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/e453be4bf22d285a34825652a7a1d20b3fdf7121/crates/oxc_linter/src/rules/react/no_danger_with_children.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>`,11))])}const C=r(k,[["render",E]]);export{x as __pageData,C as default};

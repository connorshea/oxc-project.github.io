import{_ as n,c as h,j as s,a,I as e,w as l,a4 as p,E as i,o}from"./chunks/framework.Qpa4gud8.js";const A=JSON.parse('{"title":"typescript/array-type","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/typescript/array-type.md","filePath":"docs/guide/usage/linter/rules/typescript/array-type.md"}'),d={name:"docs/guide/usage/linter/rules/typescript/array-type.md"},c={id:"typescript-array-type",tabindex:"-1"},k=s("a",{class:"header-anchor",href:"#typescript-array-type","aria-label":'Permalink to "typescript/array-type <Badge type="info" text="Style" />"'},"​",-1),y={class:"rule-meta"},g=s("span",{class:"emoji"},"🛠️",-1),u=p("",8);function _(E,m,b,f,F,x){const t=i("Badge"),r=i("Alert");return o(),h("div",null,[s("h1",c,[a("typescript/array-type "),e(t,{type:"info",text:"Style"}),a(),k]),s("div",y,[e(r,{class:"fix",type:"info"},{default:l(()=>[g,a(" An auto-fix is available for this rule. ")]),_:1})]),u])}const B=n(d,[["render",_]]);export{A as __pageData,B as default};

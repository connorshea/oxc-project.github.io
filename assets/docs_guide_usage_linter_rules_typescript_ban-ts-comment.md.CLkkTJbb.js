import{_ as o,C as a,c as l,o as p,j as s,ag as h,a as t,G as i,w as c}from"./chunks/framework.K3-BBDXc.js";const x=JSON.parse('{"title":"typescript/ban-ts-comment","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/typescript/ban-ts-comment.md","filePath":"docs/guide/usage/linter/rules/typescript/ban-ts-comment.md"}'),d={name:"docs/guide/usage/linter/rules/typescript/ban-ts-comment.md"},m={id:"typescript-ban-ts-comment",tabindex:"-1"},u={class:"rule-meta"};function k(b,e,f,y,g,E){const n=a("Badge"),r=a("Alert");return p(),l("div",null,[s("h1",m,[e[0]||(e[0]=t("typescript/ban-ts-comment ")),i(n,{type:"info",text:"Pedantic"}),e[1]||(e[1]=t()),e[2]||(e[2]=s("a",{class:"header-anchor",href:"#typescript-ban-ts-comment","aria-label":'Permalink to "typescript/ban-ts-comment <Badge type="info" text="Pedantic" />"'},"‚Äã",-1))]),s("div",u,[i(r,{class:"fix",type:"info"},{default:c(()=>e[3]||(e[3]=[s("span",{class:"emoji"},"üõ†Ô∏è",-1),t(" An auto-fix is available for this rule for some violations. ")])),_:1})]),e[4]||(e[4]=h(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">‚Äã</a></h3><p>This rule lets you set which directive comments you want to allow in your codebase.</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">‚Äã</a></h3><p>Using TypeScript directives to suppress TypeScript compiler errors reduces the effectiveness of TypeScript overall.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">‚Äã</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // @ts-ignore: Unreachable code error</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">‚Äã</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/e453be4bf22d285a34825652a7a1d20b3fdf7121/crates/oxc_linter/src/rules/typescript/ban_ts_comment.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>`,8))])}const v=o(d,[["render",k]]);export{x as __pageData,v as default};

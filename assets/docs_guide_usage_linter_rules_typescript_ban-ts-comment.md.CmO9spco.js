import{_ as o,c as r,j as e,a as s,I as t,w as l,a4 as c,E as a,o as h}from"./chunks/framework.Qpa4gud8.js";const C=JSON.parse('{"title":"typescript/ban-ts-comment","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/typescript/ban-ts-comment.md","filePath":"docs/guide/usage/linter/rules/typescript/ban-ts-comment.md"}'),p={name:"docs/guide/usage/linter/rules/typescript/ban-ts-comment.md"},d={id:"typescript-ban-ts-comment",tabindex:"-1"},m=e("a",{class:"header-anchor",href:"#typescript-ban-ts-comment","aria-label":'Permalink to "typescript/ban-ts-comment <Badge type="info" text="Pedantic" />"'},"‚Äã",-1),u={class:"rule-meta"},k=e("span",{class:"emoji"},"üõ†Ô∏è",-1),_=c(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">‚Äã</a></h3><p>This rule lets you set which directive comments you want to allow in your codebase.</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">‚Äã</a></h3><p>Using TypeScript directives to suppress TypeScript compiler errors reduces the effectiveness of TypeScript overall.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">‚Äã</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // @ts-ignore: Unreachable code error</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">‚Äã</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_linter/src/rules/typescript/ban_ts_comment.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>`,8);function b(y,f,g,E,x,v){const i=a("Badge"),n=a("Alert");return h(),r("div",null,[e("h1",d,[s("typescript/ban-ts-comment "),t(i,{type:"info",text:"Pedantic"}),s(),m]),e("div",u,[t(n,{class:"fix",type:"info"},{default:l(()=>[k,s(" An auto-fix is available for this rule for some violations. ")]),_:1})]),_])}const P=o(p,[["render",b]]);export{C as __pageData,P as default};

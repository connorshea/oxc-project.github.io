import{_ as o,C as s,c as r,o as d,j as t,ag as c,a,G as i,w as p}from"./chunks/framework.K3-BBDXc.js";const S=JSON.parse('{"title":"typescript/ban-tslint-comment","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/typescript/ban-tslint-comment.md","filePath":"docs/guide/usage/linter/rules/typescript/ban-tslint-comment.md"}'),h={name:"docs/guide/usage/linter/rules/typescript/ban-tslint-comment.md"},m={id:"typescript-ban-tslint-comment",tabindex:"-1"},u={class:"rule-meta"};function b(f,e,g,_,x,y){const n=s("Badge"),l=s("Alert");return d(),r("div",null,[t("h1",m,[e[0]||(e[0]=a("typescript/ban-tslint-comment ")),i(n,{type:"info",text:"Style"}),e[1]||(e[1]=a()),e[2]||(e[2]=t("a",{class:"header-anchor",href:"#typescript-ban-tslint-comment","aria-label":'Permalink to "typescript/ban-tslint-comment <Badge type="info" text="Style" />"'},"‚Äã",-1))]),t("div",u,[i(l,{class:"fix",type:"info"},{default:p(()=>e[3]||(e[3]=[t("span",{class:"emoji"},"üõ†Ô∏è",-1),a(" An auto-fix is available for this rule. ")])),_:1})]),e[4]||(e[4]=c(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">‚Äã</a></h3><p>This rule disallows <code>tslint:&lt;rule-flag&gt;</code> comments</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">‚Äã</a></h3><p>Useful when migrating from TSLint to ESLint. Once TSLint has been removed, this rule helps locate TSLint annotations</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">‚Äã</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// tslint:disable-next-line</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">someCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">‚Äã</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/e453be4bf22d285a34825652a7a1d20b3fdf7121/crates/oxc_linter/src/rules/typescript/ban_tslint_comment.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>`,8))])}const T=o(h,[["render",b]]);export{S as __pageData,T as default};

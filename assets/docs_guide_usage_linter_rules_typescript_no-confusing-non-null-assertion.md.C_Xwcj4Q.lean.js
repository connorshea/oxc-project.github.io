import{_ as l,C as n,c as r,o as p,j as a,ag as h,a as e,G as i,w as d}from"./chunks/framework.K3-BBDXc.js";const x=JSON.parse('{"title":"typescript/no-confusing-non-null-assertion","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/typescript/no-confusing-non-null-assertion.md","filePath":"docs/guide/usage/linter/rules/typescript/no-confusing-non-null-assertion.md"}'),c={name:"docs/guide/usage/linter/rules/typescript/no-confusing-non-null-assertion.md"},u={id:"typescript-no-confusing-non-null-assertion",tabindex:"-1"},k={class:"rule-meta"};function g(f,s,y,b,m,E){const t=n("Badge"),o=n("Alert");return p(),r("div",null,[a("h1",u,[s[0]||(s[0]=e("typescript/no-confusing-non-null-assertion ")),i(t,{type:"info",text:"Suspicious"}),s[1]||(s[1]=e()),s[2]||(s[2]=a("a",{class:"header-anchor",href:"#typescript-no-confusing-non-null-assertion","aria-label":'Permalink to "typescript/no-confusing-non-null-assertion <Badge type="info" text="Suspicious" />"'},"â€‹",-1))]),a("div",k,[i(o,{class:"fix",type:"info"},{default:d(()=>s[3]||(s[3]=[a("span",{class:"emoji"},"ðŸš§",-1),e(" An auto-fix is still under development. ")])),_:1})]),s[4]||(s[4]=h("",8))])}const A=l(c,[["render",g]]);export{x as __pageData,A as default};

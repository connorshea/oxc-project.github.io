import{_ as n,c as o,j as e,a,I as s,w as c,a4 as l,E as t,o as h}from"./chunks/framework.Qpa4gud8.js";const P=JSON.parse('{"title":"unicorn/catch-error-name","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/unicorn/catch-error-name.md","filePath":"docs/guide/usage/linter/rules/unicorn/catch-error-name.md"}'),d={name:"docs/guide/usage/linter/rules/unicorn/catch-error-name.md"},p={id:"unicorn-catch-error-name",tabindex:"-1"},u=e("a",{class:"header-anchor",href:"#unicorn-catch-error-name","aria-label":'Permalink to "unicorn/catch-error-name <Badge type="info" text="Style" />"'},"â€‹",-1),k={class:"rule-meta"},m=e("span",{class:"emoji"},"ðŸš§",-1),_=l(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">â€‹</a></h3><p>This rule enforces naming conventions for catch statements.</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">â€‹</a></h3><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">â€‹</a></h3><p>Examples of <strong>incorrect</strong> code for this rule:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (foo) {}</span></span></code></pre></div><p>Examples of <strong>correct</strong> code for this rule:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (error) {}</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">â€‹</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_linter/src/rules/unicorn/catch_error_name.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>`,10);function g(f,E,b,x,y,v){const i=t("Badge"),r=t("Alert");return h(),o("div",null,[e("h1",p,[a("unicorn/catch-error-name "),s(i,{type:"info",text:"Style"}),a(),u]),e("div",k,[s(r,{class:"fix",type:"info"},{default:c(()=>[m,a(" An auto-fix is still under development. ")]),_:1})]),_])}const q=n(d,[["render",g]]);export{P as __pageData,q as default};

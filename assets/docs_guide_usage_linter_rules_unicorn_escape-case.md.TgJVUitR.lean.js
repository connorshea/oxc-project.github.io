import{_ as h,c as l,j as s,a as i,I as a,w as p,a4 as r,E as e,o as k}from"./chunks/framework.Qpa4gud8.js";const x=JSON.parse('{"title":"unicorn/escape-case","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/unicorn/escape-case.md","filePath":"docs/guide/usage/linter/rules/unicorn/escape-case.md"}'),o={name:"docs/guide/usage/linter/rules/unicorn/escape-case.md"},c={id:"unicorn-escape-case",tabindex:"-1"},d=s("a",{class:"header-anchor",href:"#unicorn-escape-case","aria-label":'Permalink to "unicorn/escape-case <Badge type="info" text="Pedantic" />"'},"​",-1),F={class:"rule-meta"},g=s("span",{class:"emoji"},"🛠️",-1),u=r("",10);function y(E,C,f,_,m,B){const t=e("Badge"),n=e("Alert");return k(),l("div",null,[s("h1",c,[i("unicorn/escape-case "),a(t,{type:"info",text:"Pedantic"}),i(),d]),s("div",F,[a(n,{class:"fix",type:"info"},{default:p(()=>[g,i(" An auto-fix is available for this rule. ")]),_:1})]),u])}const q=h(o,[["render",y]]);export{x as __pageData,q as default};

import{_ as r,c as h,j as s,a,I as e,w as l,a4 as o,E as i,o as p}from"./chunks/framework.Qpa4gud8.js";const A=JSON.parse('{"title":"unicorn/no-await-expression-member","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/unicorn/no-await-expression-member.md","filePath":"docs/guide/usage/linter/rules/unicorn/no-await-expression-member.md"}'),d={name:"docs/guide/usage/linter/rules/unicorn/no-await-expression-member.md"},c={id:"unicorn-no-await-expression-member",tabindex:"-1"},k=s("a",{class:"header-anchor",href:"#unicorn-no-await-expression-member","aria-label":'Permalink to "unicorn/no-await-expression-member <Badge type="info" text="Style" />"'},"â€‹",-1),m={class:"rule-meta"},g=s("span",{class:"emoji"},"ðŸš§",-1),u=o(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">â€‹</a></h3><p>Disallows member access from <code>await</code> expressions.</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">â€‹</a></h3><p>When accessing a member from an <code>await</code> expression, the <code>await</code> expression has to be parenthesized, which is not readable.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">â€‹</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> secondElement</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> good</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">secondElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">â€‹</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_linter/src/rules/unicorn/no_await_expression_member.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>`,8);function E(_,y,b,x,f,F){const n=i("Badge"),t=i("Alert");return p(),h("div",null,[s("h1",c,[a("unicorn/no-await-expression-member "),e(n,{type:"info",text:"Style"}),a(),k]),s("div",m,[e(t,{class:"fix",type:"info"},{default:l(()=>[g,a(" An auto-fix is still under development. ")]),_:1})]),u])}const C=r(d,[["render",E]]);export{A as __pageData,C as default};

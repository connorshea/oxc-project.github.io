import{_ as r,C as t,c as d,o as h,j as s,ag as p,a as e,G as i,w as o}from"./chunks/framework.K3-BBDXc.js";const w=JSON.parse('{"title":"unicorn/no-unnecessary-await","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/unicorn/no-unnecessary-await.md","filePath":"docs/guide/usage/linter/rules/unicorn/no-unnecessary-await.md"}'),c={name:"docs/guide/usage/linter/rules/unicorn/no-unnecessary-await.md"},u={id:"unicorn-no-unnecessary-await",tabindex:"-1"},k={class:"rule-meta"};function g(b,a,y,f,m,E){const l=t("Badge"),n=t("Alert");return h(),d("div",null,[s("h1",u,[a[0]||(a[0]=e("unicorn/no-unnecessary-await ")),i(l,{type:"info",text:"Correctness"}),a[1]||(a[1]=e()),a[2]||(a[2]=s("a",{class:"header-anchor",href:"#unicorn-no-unnecessary-await","aria-label":'Permalink to "unicorn/no-unnecessary-await <Badge type="info" text="Correctness" />"'},"‚Äã",-1))]),s("div",k,[i(n,{class:"default-on",type:"success"},{default:o(()=>a[3]||(a[3]=[s("span",{class:"emoji"},"‚úÖ",-1),e(" This rule is turned on by default. ")])),_:1}),i(n,{class:"fix",type:"info"},{default:o(()=>a[4]||(a[4]=[s("span",{class:"emoji"},"üõ†Ô∏è",-1),e(" An auto-fix is available for this rule for some violations. ")])),_:1})]),a[5]||(a[5]=p(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">‚Äã</a></h3><p>Disallow awaiting on non-promise values.</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">‚Äã</a></h3><p>The <code>await</code> operator should only be used on <code>Promise</code> values.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">‚Äã</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> promise;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="how-to-use" tabindex="-1">How to use <a class="header-anchor" href="#how-to-use" aria-label="Permalink to &quot;How to use&quot;">‚Äã</a></h2><p>To <strong>enable</strong> this rule in the CLI or using the config file, you can use:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-7aYcf" id="tab-mI56-d7" checked><label data-title="CLI" for="tab-mI56-d7">CLI</label><input type="radio" name="group-7aYcf" id="tab-wigbZV5"><label data-title="Config (.oxlintrc.json)" for="tab-wigbZV5">Config (.oxlintrc.json)</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">oxlint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --deny</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> unicorn/no-unnecessary-await</span></span></code></pre></div><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;rules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;unicorn/no-unnecessary-await&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">‚Äã</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/19fdf8993df7b697b99d9b92a3a546cce7171c42/crates/oxc_linter/src/rules/unicorn/no_unnecessary_await.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>`,11))])}const x=r(c,[["render",g]]);export{w as __pageData,x as default};

import{_ as r,c as t,j as e,a as s,I as a,w as l,a4 as c,E as i,o as d}from"./chunks/framework.D6UG3LSr.js";const j=JSON.parse('{"title":"unicorn/no-useless-promise-resolve-reject","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/unicorn/no-useless-promise-resolve-reject.md","filePath":"docs/guide/usage/linter/rules/unicorn/no-useless-promise-resolve-reject.md"}'),h={name:"docs/guide/usage/linter/rules/unicorn/no-useless-promise-resolve-reject.md"},p={id:"unicorn-no-useless-promise-resolve-reject",tabindex:"-1"},u=e("a",{class:"header-anchor",href:"#unicorn-no-useless-promise-resolve-reject","aria-label":'Permalink to "unicorn/no-useless-promise-resolve-reject <Badge type="info" text="Pedantic" />"'},"‚Äã",-1),k={class:"rule-meta"},m=e("span",{class:"emoji"},"üõ†Ô∏è",-1),_=c(`<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">‚Äã</a></h3><p>Disallows returning values wrapped in <code>Promise.resolve</code> or <code>Promise.reject</code> in an async function or a <code>Promise#then</code>/<code>catch</code>/<code>finally</code> callback.</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">‚Äã</a></h3><p>Wrapping a return value in <code>Promise.resolve</code> in an async function or a <code>Promise#then</code>/<code>catch</code>/<code>finally</code> callback is unnecessary as all return values in async functions and promise callback functions are already wrapped in a <code>Promise</code>. Similarly, returning an error wrapped in <code>Promise.reject</code> is equivalent to simply <code>throw</code>ing the error. This is the same for <code>yield</code>ing in async generators as well.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">‚Äã</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// bad</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(bar);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// good</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bar;</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">‚Äã</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_linter/src/rules/unicorn/no_useless_promise_resolve_reject.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>`,8);function g(y,f,b,v,E,x){const n=i("Badge"),o=i("Alert");return d(),t("div",null,[e("h1",p,[s("unicorn/no-useless-promise-resolve-reject "),a(n,{type:"info",text:"Pedantic"}),s(),u]),e("div",k,[a(o,{class:"fix",type:"info"},{default:l(()=>[m,s(" An auto-fix is available for this rule. ")]),_:1})]),_])}const A=r(h,[["render",g]]);export{j as __pageData,A as default};

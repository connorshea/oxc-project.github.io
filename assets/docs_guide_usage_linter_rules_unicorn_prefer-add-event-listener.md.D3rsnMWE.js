import{_ as r,c as o,j as e,a as s,I as a,w as d,a4 as l,E as t,o as c}from"./chunks/framework.Qpa4gud8.js";const C=JSON.parse('{"title":"unicorn/prefer-add-event-listener","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/unicorn/prefer-add-event-listener.md","filePath":"docs/guide/usage/linter/rules/unicorn/prefer-add-event-listener.md"}'),h={name:"docs/guide/usage/linter/rules/unicorn/prefer-add-event-listener.md"},p={id:"unicorn-prefer-add-event-listener",tabindex:"-1"},u=e("a",{class:"header-anchor",href:"#unicorn-prefer-add-event-listener","aria-label":'Permalink to "unicorn/prefer-add-event-listener <Badge type="info" text="Suspicious" />"'},"â€‹",-1),k={class:"rule-meta"},f=e("span",{class:"emoji"},"ðŸš§",-1),g=l('<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">â€‹</a></h3><p>Enforces the use of <code>.addEventListener()</code> and <code>.removeEventListener()</code> over their <code>on</code>-function counterparts.</p><p>For example, <code>foo.addEventListener(&#39;click&#39;, handler);</code> is preferred over <code>foo.onclick = handler;</code> for HTML DOM Events.</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">â€‹</a></h3><p>There are <a href="https://stackoverflow.com/questions/6348494/addeventlistener-vs-onclick/35093997#35093997" target="_blank" rel="noreferrer">numerous advantages of using <code>addEventListener</code></a>. Some of these advantages include registering unlimited event handlers and optionally having the event handler invoked only once.</p><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">â€‹</a></h3><p>Examples of <strong>incorrect</strong> code for this rule:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">foo.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onclick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {};</span></span></code></pre></div><p>Examples of <strong>correct</strong> code for this rule:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">foo.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;click&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {});</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">â€‹</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/main/crates/oxc_linter/src/rules/unicorn/prefer_add_event_listener.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>',12);function v(E,_,m,b,x,y){const i=t("Badge"),n=t("Alert");return c(),o("div",null,[e("h1",p,[s("unicorn/prefer-add-event-listener "),a(i,{type:"info",text:"Suspicious"}),s(),u]),e("div",k,[a(n,{class:"fix",type:"info"},{default:d(()=>[f,s(" An auto-fix is still under development. ")]),_:1})]),g])}const F=r(h,[["render",v]]);export{C as __pageData,F as default};

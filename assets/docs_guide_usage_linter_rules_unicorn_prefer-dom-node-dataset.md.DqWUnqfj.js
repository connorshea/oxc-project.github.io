import{_ as n,C as s,c as d,o as l,j as t,ag as p,a,G as i,w as c}from"./chunks/framework.K3-BBDXc.js";const y=JSON.parse('{"title":"unicorn/prefer-dom-node-dataset","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/unicorn/prefer-dom-node-dataset.md","filePath":"docs/guide/usage/linter/rules/unicorn/prefer-dom-node-dataset.md"}'),h={name:"docs/guide/usage/linter/rules/unicorn/prefer-dom-node-dataset.md"},u={id:"unicorn-prefer-dom-node-dataset",tabindex:"-1"},m={class:"rule-meta"};function k(f,e,g,b,E,_){const o=s("Badge"),r=s("Alert");return l(),d("div",null,[t("h1",u,[e[0]||(e[0]=a("unicorn/prefer-dom-node-dataset ")),i(o,{type:"info",text:"Pedantic"}),e[1]||(e[1]=a()),e[2]||(e[2]=t("a",{class:"header-anchor",href:"#unicorn-prefer-dom-node-dataset","aria-label":'Permalink to "unicorn/prefer-dom-node-dataset <Badge type="info" text="Pedantic" />"'},"â€‹",-1))]),t("div",m,[i(r,{class:"fix",type:"info"},{default:c(()=>e[3]||(e[3]=[t("span",{class:"emoji"},"ðŸš§",-1),a(" An auto-fix is still under development. ")])),_:1})]),e[4]||(e[4]=p('<h3 id="what-it-does" tabindex="-1">What it does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What it does&quot;">â€‹</a></h3><p>Use <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dataset" target="_blank" rel="noreferrer"><code>.dataset</code></a> on DOM elements over <code>getAttribute(â€¦)</code>, <code>.setAttribute(â€¦)</code>, <code>.removeAttribute(â€¦)</code> and <code>.hasAttribute(â€¦)</code>.</p><h3 id="why-is-this-bad" tabindex="-1">Why is this bad? <a class="header-anchor" href="#why-is-this-bad" aria-label="Permalink to &quot;Why is this bad?&quot;">â€‹</a></h3><p>The <code>dataset</code> property is a map of strings that contains all the <code>data-*</code> attributes from the element. It is a convenient way to access all of them at once.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">â€‹</a></h3><p>Examples of <strong>incorrect</strong> code for this rule:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;data-unicorn&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ðŸ¦„&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Examples of <strong>correct</strong> code for this rule:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element.dataset.unicorn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ðŸ¦„&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">â€‹</a></h2><ul><li><a href="https://github.com/oxc-project/oxc/blob/e453be4bf22d285a34825652a7a1d20b3fdf7121/crates/oxc_linter/src/rules/unicorn/prefer_dom_node_dataset.rs" target="_blank" rel="noreferrer">Rule Source</a></li></ul>',11))])}const v=n(h,[["render",k]]);export{y as __pageData,v as default};

import{_ as r,c as h,j as s,a as i,I as a,w as p,a4 as l,E as e,o}from"./chunks/framework.Qpa4gud8.js";const B=JSON.parse('{"title":"unicorn/prefer-prototype-methods","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/unicorn/prefer-prototype-methods.md","filePath":"docs/guide/usage/linter/rules/unicorn/prefer-prototype-methods.md"}'),k={name:"docs/guide/usage/linter/rules/unicorn/prefer-prototype-methods.md"},d={id:"unicorn-prefer-prototype-methods",tabindex:"-1"},c=s("a",{class:"header-anchor",href:"#unicorn-prefer-prototype-methods","aria-label":'Permalink to "unicorn/prefer-prototype-methods <Badge type="info" text="Pedantic" />"'},"​",-1),y={class:"rule-meta"},g=s("span",{class:"emoji"},"🛠️",-1),E=l("",11);function u(f,m,F,_,b,C){const t=e("Badge"),n=e("Alert");return o(),h("div",null,[s("h1",d,[i("unicorn/prefer-prototype-methods "),a(t,{type:"info",text:"Pedantic"}),i(),c]),s("div",y,[a(n,{class:"fix",type:"info"},{default:p(()=>[g,i(" An auto-fix is available for this rule. ")]),_:1})]),E])}const v=r(k,[["render",u]]);export{B as __pageData,v as default};

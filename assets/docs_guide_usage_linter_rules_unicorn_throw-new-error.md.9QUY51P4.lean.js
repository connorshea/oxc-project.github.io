import{_ as n,c as h,j as s,a as i,I as a,w as o,a4 as l,E as e,o as p}from"./chunks/framework.Qpa4gud8.js";const q=JSON.parse('{"title":"unicorn/throw-new-error","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guide/usage/linter/rules/unicorn/throw-new-error.md","filePath":"docs/guide/usage/linter/rules/unicorn/throw-new-error.md"}'),k={name:"docs/guide/usage/linter/rules/unicorn/throw-new-error.md"},d={id:"unicorn-throw-new-error",tabindex:"-1"},c=s("a",{class:"header-anchor",href:"#unicorn-throw-new-error","aria-label":'Permalink to "unicorn/throw-new-error <Badge type="info" text="Style" />"'},"​",-1),E={class:"rule-meta"},u=s("span",{class:"emoji"},"🛠️",-1),g=l("",11);function y(w,_,F,b,m,f){const t=e("Badge"),r=e("Alert");return p(),h("div",null,[s("h1",d,[i("unicorn/throw-new-error "),a(t,{type:"info",text:"Style"}),i(),c]),s("div",E,[a(r,{class:"fix",type:"info"},{default:o(()=>[u,i(" An auto-fix is available for this rule. ")]),_:1})]),g])}const C=n(k,[["render",y]]);export{q as __pageData,C as default};

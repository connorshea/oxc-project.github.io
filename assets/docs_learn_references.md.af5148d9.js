import{_ as e,o as r,c as a,Q as t}from"./chunks/framework.36bc40e2.js";const g=JSON.parse('{"title":"References","description":"","frontmatter":{"title":"References","outline":"deep"},"headers":[],"relativePath":"docs/learn/references.md","filePath":"docs/learn/references.md","lastUpdated":1700043982000}'),l={name:"docs/learn/references.md"},i=t('<h2 id="ðŸ“š-learning-resources" tabindex="-1">ðŸ“š Learning Resources <a class="header-anchor" href="#ðŸ“š-learning-resources" aria-label="Permalink to &quot;ðŸ“š Learning Resources&quot;">â€‹</a></h2><ul><li>My small tutorial on <a href="https://oxc-project.github.io/javascript-parser-in-rust" target="_blank" rel="noreferrer">how to write a JavaScript Parser in Rust</a></li><li>My small article <a href="https://rustmagazine.org/issue-3/javascript-compiler/" target="_blank" rel="noreferrer">Pursuit of Performance on Building a JavaScript Compiler</a></li><li><a href="https://craftinginterpreters.com" target="_blank" rel="noreferrer">Crafting Interpreters</a></li><li><a href="https://vimeo.com/649009599" target="_blank" rel="noreferrer">Andrew Kelley - Practical DOD</a></li></ul><h2 id="parsers-in-active-development" tabindex="-1">Parsers (in active development) <a class="header-anchor" href="#parsers-in-active-development" aria-label="Permalink to &quot;Parsers (in active development)&quot;">â€‹</a></h2><ul><li>Rust <ul><li><a href="https://swc.rs" target="_blank" rel="noreferrer">swc</a></li><li><a href="https://biomejs.dev" target="_blank" rel="noreferrer">Biome</a></li><li><a href="https://github.com/mozilla-spidermonkey/jsparagus" target="_blank" rel="noreferrer">jsparagus</a></li><li><a href="https://github.com/ratel-rust/ratel-core" target="_blank" rel="noreferrer">ratel</a></li><li><a href="https://github.com/lastmjs/boa-azle" target="_blank" rel="noreferrer">boa</a></li></ul></li><li>JavaScript <ul><li><a href="https://github.com/acornjs/acorn" target="_blank" rel="noreferrer">acorn</a></li><li><a href="https://babeljs.io" target="_blank" rel="noreferrer">babel</a></li></ul></li><li>Go <ul><li><a href="https://esbuild.github.io" target="_blank" rel="noreferrer">esbuild</a></li></ul></li><li>C++ <ul><li><a href="https://github.com/quick-lint/quick-lint-js" target="_blank" rel="noreferrer">quick-lint-js</a></li></ul></li></ul><h2 id="ast" tabindex="-1">AST <a class="header-anchor" href="#ast" aria-label="Permalink to &quot;AST&quot;">â€‹</a></h2><ul><li><a href="https://github.com/estree/estree" target="_blank" rel="noreferrer">estree</a></li><li><a href="https://github.com/swc-project/swc/tree/main/crates/swc_ecma_ast/src" target="_blank" rel="noreferrer">swc_ecma_ast</a></li><li><a href="https://github.com/babel/babel/blob/main/packages/babel-types/src/ast-types/generated/index.ts" target="_blank" rel="noreferrer">babel ast</a></li><li><a href="https://gist.github.com/Boshen/0b481a058cd715576aaf1624d2c6d469" target="_blank" rel="noreferrer">jsparagus</a></li></ul><h2 id="rust" tabindex="-1">Rust <a class="header-anchor" href="#rust" aria-label="Permalink to &quot;Rust&quot;">â€‹</a></h2><ul><li><a href="https://nnethercote.github.io/perf-book/introduction.html" target="_blank" rel="noreferrer">The Rust Performance Book</a></li></ul><h2 id="blog-posts" tabindex="-1">Blog Posts <a class="header-anchor" href="#blog-posts" aria-label="Permalink to &quot;Blog Posts&quot;">â€‹</a></h2><ul><li><a href="https://v8.dev/blog/scanner" target="_blank" rel="noreferrer">Blazingly fast parsing, part 1: optimizing the scanner</a></li><li><a href="https://v8.dev/blog/preparser" target="_blank" rel="noreferrer">Blazingly fast parsing, part 2: lazy parsing</a></li><li><a href="https://v8.dev/blog/tags/understanding-ecmascript" target="_blank" rel="noreferrer">Understanding ECMAScript</a></li><li><a href="https://matklad.github.io/2020/04/13/simple-but-powerful-pratt-parsing.html" target="_blank" rel="noreferrer">Simple but Powerful Pratt Parsing</a></li><li><a href="https://github.com/mozilla-spidermonkey/jsparagus/blob/master/js-quirks.md" target="_blank" rel="noreferrer">JS syntactic quirks</a></li></ul>',10),s=[i];function n(o,c,h,u,p,b){return r(),a("div",null,s)}const d=e(l,[["render",n]]);export{g as __pageData,d as default};

import{_ as o,o as t,c as a,k as e,a as r}from"./chunks/framework.725e5b03.js";const b=JSON.parse('{"title":"Resolver","description":"","frontmatter":{"title":"Resolver","outline":"deep"},"headers":[],"relativePath":"ja/docs/contribute/resolver.md","filePath":"ja/docs/contribute/resolver.md","lastUpdated":1701872320000}'),s={name:"ja/docs/contribute/resolver.md"},l=e("h1",{id:"resolver",tabindex:"-1"},[r("Resolver "),e("a",{class:"header-anchor",href:"#resolver","aria-label":'Permalink to "Resolver"'},"â€‹")],-1),n=e("p",null,[r("Module resolution plays a crucial role in JavaScript tooling, especially for tasks like multi-file analysis or bundling. However, it can often become a performance bottleneck. To address this, we are actively working on porting "),e("a",{href:"https://github.com/webpack/enhanced-resolve",target:"_blank",rel:"noreferrer"},"enhanced-resolve"),r(".")],-1),c=e("p",null,[e("a",{href:"https://github.com/oxc-project/oxc/issues/1117",target:"_blank",rel:"noreferrer"},"eslint-plugin-import"),r(" will be our first application for the resolver, since it is currently a performance and complexity blocker for a lot of projects.")],-1),i=[l,n,c];function d(p,f,h,u,_,m){return t(),a("div",null,i)}const k=o(s,[["render",d]]);export{b as __pageData,k as default};

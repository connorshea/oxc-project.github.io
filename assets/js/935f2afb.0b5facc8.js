"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"usage":[{"type":"link","label":"Linter","href":"/docs/usage/linter","docId":"usage/linter","unlisted":false},{"type":"link","label":"Parser","href":"/docs/usage/parser","docId":"usage/parser","unlisted":false},{"type":"link","label":"Resolver","href":"/docs/usage/resolver","docId":"usage/resolver","unlisted":false}],"contribute":[{"type":"link","label":"Installation","href":"/docs/contribute/intro","docId":"contribute/intro","unlisted":false},{"type":"link","label":"Rules","href":"/docs/contribute/rules","docId":"contribute/rules","unlisted":false},{"type":"link","label":"Parser","href":"/docs/contribute/parser","docId":"contribute/parser","unlisted":false},{"type":"link","label":"Linter","href":"/docs/contribute/linter","docId":"contribute/linter","unlisted":false},{"type":"link","label":"Resolver","href":"/docs/contribute/resolver","docId":"contribute/resolver","unlisted":false},{"type":"link","label":"Transformer","href":"/docs/contribute/transformer","docId":"contribute/transformer","unlisted":false},{"type":"link","label":"Formatter","href":"/docs/contribute/formatter","docId":"contribute/formatter","unlisted":false},{"type":"link","label":"Codegen","href":"/docs/contribute/codegen","docId":"contribute/codegen","unlisted":false},{"type":"link","label":"Minifier","href":"/docs/contribute/minifier","docId":"contribute/minifier","unlisted":false},{"type":"link","label":"VSCode Extension","href":"/docs/contribute/vscode","docId":"contribute/vscode","unlisted":false},{"type":"link","label":"Performance","href":"/docs/contribute/performance","docId":"contribute/performance","unlisted":false},{"type":"link","label":"Showcase","href":"/docs/contribute/showcase","docId":"contribute/showcase","unlisted":false}],"learn":[{"type":"link","label":"Ecosystem","href":"/docs/learn/ecosystem","docId":"learn/ecosystem","unlisted":false},{"type":"link","label":"Partnership","href":"/docs/learn/partnership","docId":"learn/partnership","unlisted":false},{"type":"category","label":"Architecture","items":[{"type":"link","label":"Introduction","href":"/docs/learn/architecture/intro","docId":"learn/architecture/intro","unlisted":false},{"type":"link","label":"Parser","href":"/docs/learn/architecture/parser","docId":"learn/architecture/parser","unlisted":false},{"type":"link","label":"Linter","href":"/docs/learn/architecture/linter","docId":"learn/architecture/linter","unlisted":false},{"type":"link","label":"Resolver","href":"/docs/learn/architecture/resolver","docId":"learn/architecture/resolver","unlisted":false},{"type":"link","label":"Transformer","href":"/docs/learn/architecture/transformer","docId":"learn/architecture/transformer","unlisted":false},{"type":"link","label":"Formatter","href":"/docs/learn/architecture/formatter","docId":"learn/architecture/formatter","unlisted":false},{"type":"link","label":"Minifier","href":"/docs/learn/architecture/minifier","docId":"learn/architecture/minifier","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"ECMAScript","items":[{"type":"link","label":"Specification","href":"/docs/learn/ecmascript/ecma_spec","docId":"learn/ecmascript/ecma_spec","unlisted":false},{"type":"link","label":"Grammar","href":"/docs/learn/ecmascript/grammar","docId":"learn/ecmascript/grammar","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"Performance","href":"/docs/learn/performance","docId":"learn/performance","unlisted":false},{"type":"link","label":"References","href":"/docs/learn/references","docId":"learn/references","unlisted":false}]},"docs":{"blog/biome":{"id":"blog/biome","title":"Biome","description":"Rome uses a different set of techniques for parsing JavaScript and TypeScript."},"contribute/codegen":{"id":"contribute/codegen","title":"Codegen","description":"","sidebar":"contribute"},"contribute/formatter":{"id":"contribute/formatter","title":"Formatter","description":"While [prettier] has established itself as the de facto code formatter for JavaScript, there is a significant demand in the developer community for a less opinionated alternative. Recognizing this need, our ambition is to undertake research and development to create a new JavaScript formatter that offers increased flexibility and customization options.","sidebar":"contribute"},"contribute/intro":{"id":"contribute/intro","title":"Installation","description":"Clone Repo","sidebar":"contribute"},"contribute/linter":{"id":"contribute/linter","title":"Linter","description":"Development","sidebar":"contribute"},"contribute/minifier":{"id":"contribute/minifier","title":"Minifier","description":"JavaScript minification plays a crucial role in optimizing website performance as it reduces the amount of data sent to users,","sidebar":"contribute"},"contribute/parser":{"id":"contribute/parser","title":"Parser","description":"We aim to be the fastest Rust-based ready-for-production parser.","sidebar":"contribute"},"contribute/performance":{"id":"contribute/performance","title":"Performance","description":"Compile Time","sidebar":"contribute"},"contribute/resolver":{"id":"contribute/resolver","title":"Resolver","description":"Module resolution plays a crucial role in JavaScript tooling, especially for tasks like multi-file analysis or bundling. However, it can often become a performance bottleneck.","sidebar":"contribute"},"contribute/rules":{"id":"contribute/rules","title":"Rules","description":"- Check out some of the good first issues or ask us on Discord.","sidebar":"contribute"},"contribute/showcase":{"id":"contribute/showcase","title":"Showcase","description":"Example PRs adding oxlint:","sidebar":"contribute"},"contribute/transformer":{"id":"contribute/transformer","title":"Transformer","description":"A transformer is responsible for turning higher versions of ECMAScript to a lower version that can be used in older browsers.","sidebar":"contribute"},"contribute/vscode":{"id":"contribute/vscode","title":"VSCode Extension","description":"Development","sidebar":"contribute"},"learn/architecture/formatter":{"id":"learn/architecture/formatter","title":"Formatter","description":"","sidebar":"learn"},"learn/architecture/intro":{"id":"learn/architecture/intro","title":"Introduction","description":"","sidebar":"learn"},"learn/architecture/linter":{"id":"learn/architecture/linter","title":"Linter","description":"See crates/oxc_linter/examples/linter.rs for the bare minimum linter implementation.","sidebar":"learn"},"learn/architecture/minifier":{"id":"learn/architecture/minifier","title":"Minifier","description":"","sidebar":"learn"},"learn/architecture/parser":{"id":"learn/architecture/parser","title":"Parser","description":"Oxc maintains its own AST and parser, which is by far the fastest and most conformant JavaScript and TypeScript (including JSX and TSX) parser written in Rust.","sidebar":"learn"},"learn/architecture/resolver":{"id":"learn/architecture/resolver","title":"Resolver","description":"","sidebar":"learn"},"learn/architecture/transformer":{"id":"learn/architecture/transformer","title":"Transformer","description":"","sidebar":"learn"},"learn/ecmascript/ecma_spec":{"id":"learn/ecmascript/ecma_spec","title":"Specification","description":"The ECMAScript\xae 2023 Language Specification details everything about the JavaScript language, so anyone can implement their own JavaScript engine.","sidebar":"learn"},"learn/ecmascript/grammar":{"id":"learn/ecmascript/grammar","title":"Grammar","description":"JavaScript has one of the most challenging grammar to parse,","sidebar":"learn"},"learn/ecosystem":{"id":"learn/ecosystem","title":"Ecosystem","description":"Contributing to oxc will benefit the whole frontend development community.","sidebar":"learn"},"learn/partnership":{"id":"learn/partnership","title":"Partnership","description":"Contributing to oxc will also get you to help our sister projects:","sidebar":"learn"},"learn/performance":{"id":"learn/performance","title":"Performance","description":"Originally posted on https://rustmagazine.org/issue-3/javascript-compiler/","sidebar":"learn"},"learn/references":{"id":"learn/references","title":"References","description":"\ud83d\udcda Learning Resources","sidebar":"learn"},"usage/linter":{"id":"usage/linter","title":"Linter","description":"Features","sidebar":"usage"},"usage/parser":{"id":"usage/parser","title":"Parser","description":"Features","sidebar":"usage"},"usage/resolver":{"id":"usage/resolver","title":"Resolver","description":"Node.js Module Resolution.","sidebar":"usage"}}}')}}]);
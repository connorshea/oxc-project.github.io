import{_ as e,c as a,o as s,a4 as t}from"./chunks/framework.BmRrB1Kw.js";const b=JSON.parse('{"title":"Development","description":"","frontmatter":{"title":"Development","outline":"deep"},"headers":[],"relativePath":"zh/docs/contribute/development.md","filePath":"zh/docs/contribute/development.md"}'),o={name:"zh/docs/contribute/development.md"},i=t('<h1 id="development" tabindex="-1">Development <a class="header-anchor" href="#development" aria-label="Permalink to &quot;Development&quot;">​</a></h1><p>This page explains how to set up enrionment for OXC development.</p><h2 id="clone-repository" tabindex="-1">Clone Repository <a class="header-anchor" href="#clone-repository" aria-label="Permalink to &quot;Clone Repository&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recurse-submodules</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --shallow-submodules</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:oxc-project/oxc.git</span></span></code></pre></div><p>The <code>--recurse-submodules</code> and <code>--shallow-submodules</code> flags are needed to initialize git submodules that are needed to run conformance tests.</p><h2 id="set-up-project" tabindex="-1">Set Up Project <a class="header-anchor" href="#set-up-project" aria-label="Permalink to &quot;Set Up Project&quot;">​</a></h2><h3 id="install-rust" tabindex="-1">Install Rust <a class="header-anchor" href="#install-rust" aria-label="Permalink to &quot;Install Rust&quot;">​</a></h3><p>If you have not yet installed Rust, follow <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noreferrer">the official instruction</a> and install Rust.</p><p>After installing Rust, run the following command at the project root:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rustup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> show</span></span></code></pre></div><p><code>rustup show</code> reads the <code>./rust-toolchain.toml</code> file and installs the correct Rust toolchain and components for this project.</p><h3 id="install-project-tools" tabindex="-1">Install Project Tools <a class="header-anchor" href="#install-project-tools" aria-label="Permalink to &quot;Install Project Tools&quot;">​</a></h3><h4 id="cargo-binstall" tabindex="-1"><code>cargo-binstall</code> <a class="header-anchor" href="#cargo-binstall" aria-label="Permalink to &quot;`cargo-binstall`&quot;">​</a></h4><p>Some Cargo tools are required to develop OXC, and it is recommended to use <a href="https://github.com/cargo-bins/cargo-binstall" target="_blank" rel="noreferrer">cargo binstall</a>, which provides a low-complexity mechanism to install rust binaries and is faster way than building them from source by running <code>cargo install</code>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cargo-binstall</span></span></code></pre></div><p>You can also download <a href="https://github.com/cargo-bins/cargo-binstall#installation" target="_blank" rel="noreferrer">the pre-compiled binary</a> and save it in <code>~/.cargo/bin</code>.</p><h4 id="just" tabindex="-1"><code>just</code> <a class="header-anchor" href="#just" aria-label="Permalink to &quot;`just`&quot;">​</a></h4><p>OXC utilizes <a href="https://github.com/casey/just" target="_blank" rel="noreferrer"><code>just</code></a>, which is a handy way to save and run project-specific commands:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> binstall</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> just</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span></code></pre></div><h4 id="dependencies" tabindex="-1">Dependencies <a class="header-anchor" href="#dependencies" aria-label="Permalink to &quot;Dependencies&quot;">​</a></h4><p>Run the following command in <code>justfile</code> at the project root to install dependencies:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">just</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre></div><p>You can see the list of available commands by running <code>just</code>.</p><p>You can run <code>just ready</code> (or, <code>just r</code> in short) to make sure the whole project builds and runs correctly.</p><hr><p>Now you are ready to develop OXC! You can check out <a href="https://github.com/oxc-project/oxc/contribute" target="_blank" rel="noreferrer">good first issues</a> or ask us on <a href="https://discord.gg/9uXCAwqQZW" target="_blank" rel="noreferrer">Discord</a>.</p>',26),n=[i];function l(r,c,h,d,p,u){return s(),a("div",null,n)}const k=e(o,[["render",l]]);export{b as __pageData,k as default};
